! Configuration File for keepalived

global_defs {
    router_id whpg-s               # 각 서버마다 고유한 ID (호스트 이름 등으로 설정 권장)
    script_user gpadmin            # 스크립트를 이 사용자로 실행합니다.
    # notification_email {
    #   admin@example.com
    # }
    # notification_email_from keepalived@example.com
    # smtp_server 127.0.0.1
    # smtp_connect_timeout 30
    enable_script_security         # 스크립트 실행 보안 강화 (권장)
    # vrrp_skip_check_adv_addr
    # vrrp_strict
    # vrrp_garp_interval 0
    # vrrp_gna_interval 0
}

vrrp_script chk_service_health {
    script "/etc/keepalived/check_my_service.sh" # 서비스 상태 체크 스크립트
    interval 1                                   # 1초마다 실행
    weight 50                                    # 스크립트 실패 시 우선순위 30 감소, standby 가 정상인 경우 30 증가
    fall 3                                       # 3회 실패 시 FAULT 상태로 전환
    rise 1                                       # 1회 성공 시 다시 정상 상태로 전환
}

vrrp_instance VI_1 {
    state BACKUP             # 이 노드의 초기 상태: BACKUP or MASTER
    interface eth1           # VRRP 패킷을 주고받을 네트워크 인터페이스 (실제 인터페이스명으로 변경)
    virtual_router_id 51     # VRRP 라우터 ID (이 클러스터 내에서 고유해야 함, 1-255)
    priority 98              # 이 노드의 우선순위 (Master Node를 2보다 높게 설정)
    # max_auto_priority 120  # Failover 후 VIP를 가진 BACKUP 서버의 우선순위가 max_auto_priority 값 이상이면, MASTER는 VIP를 되찾아오지 않고 대기

    #nopreempt               # Priority 가 높다고 Failover 되지 않음. vrrp packet 이 정상적으로 오면. 상태 유지.
    preempt                  # Priority 높은 노드가 Master

    advert_int 1             # VRRP 광고 간격 (초), 실이 값의 3배 동안 광고 패킷을 받지 못할 때 장해로 인지합니다. 즉 3초 동안 대기함.
    authentication {
        auth_type AH         # 인증 방식 (PASS 또는 AH)
        auth_pass secretpw   # 인증 비밀번호 (두 노드 동일하게 설정)
    }

    # -- Unicast 설정의 핵심 부분 --
    #unicast_src_ip 192.168.10.12      # 자신의 IP 주소
    #unicast_peer {
    #    192.168.10.11                # 상대방(Master) 서버의 IP 주소
    #}

    virtual_ipaddress {
        #192.168.56.100/24 dev eth1 label eth1:0    # 클라이언트가 접근할 가상 IP 주소 (VIP)
        192.168.56.100/24    # 클라이언트가 접근할 가상 IP 주소 (VIP)
    }

    track_script {
        chk_service_health
    }

    notify_master "/etc/keepalived/notify_master.sh MASTER"
    notify_backup "/etc/keepalived/notify_state_change.sh BACKUP"
    #notify_fault "/etc/keepalived/notify_state_change.sh FAULT"
    notify_stop "/etc/keepalived/notify_stop.sh BACKUP"
}
